{"version":3,"file":"utils.js","sources":["../src/utils.js"],"sourcesContent":["function strToCompareArray(str) {\r\n\r\n    return str.split(/\\W+/g).map(c => c.trim().toLowerCase());\r\n\r\n}\r\n\r\nfunction compareStr(a, b) {\r\n\r\n    if (typeof a === 'string') a = strToCompareArray(a);\r\n    if (typeof b === 'string') b = strToCompareArray(b);\r\n\r\n    const matched = [];\r\n    for (let i = 0, l = a.length; i < l; i++) {\r\n\r\n        if (b.includes(a[i])) matched.push(a[i]);\r\n\r\n    }\r\n\r\n\r\n    const unmatchedTokens = a.length - matched.length + b.length - matched.length;\r\n    const score = (matched.length / Math.min(a.length, b.length)) - unmatchedTokens * 0.001;\r\n\r\n    return score;\r\n\r\n}\r\n\r\nfunction findMatch(name, list) {\r\n\r\n    let matches = null;\r\n    let score = -Infinity;\r\n\r\n    const versionMatches = /\\w*\\d\\d\\d+\\w*/.exec(name);\r\n    let versionRegexp = null;\r\n    if (versionMatches) {\r\n        versionRegexp = new RegExp(`(^|\\\\W)${ versionMatches[0] }(\\\\W|$)`, 'i');\r\n    }\r\n\r\n    const gpuArr = strToCompareArray(name);\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n\r\n        const name = list[i];\r\n        if (versionRegexp && !versionRegexp.test(name)) continue;\r\n        if (!versionRegexp && /\\d\\d\\d+/.test(name)) continue;\r\n\r\n        const similarity = compareStr(name, gpuArr);\r\n        if (similarity > score) {\r\n\r\n            score = similarity;\r\n            matches = [name];\r\n\r\n        } else if (similarity === score) {\r\n\r\n            matches.push(name);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return { matches, score };\r\n\r\n}\r\n\r\nexport { findMatch };\r\n"],"names":["strToCompareArray","str","split","map","c","trim","toLowerCase","compareStr","a","b","matched","i","l","length","includes","push","unmatchedTokens","score","Math","min","findMatch","name","list","matches","Infinity","versionMatches","exec","versionRegexp","RegExp","gpuArr","test","similarity"],"mappings":";;;;;;IAAA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgC;IAE5B,SAAOA,GAAG,CAACC,KAAJ,CAAU,MAAV,EAAkBC,GAAlB,CAAsB,UAAAC,CAAC;IAAA,WAAIA,CAAC,CAACC,IAAF,GAASC,WAAT,EAAJ;IAAA,GAAvB,CAAP;IAEH;;IAED,SAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;IAEtB,MAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2BA,CAAC,GAAGR,iBAAiB,CAACQ,CAAD,CAArB;IAC3B,MAAI,OAAOC,CAAP,KAAa,QAAjB,EAA2BA,CAAC,GAAGT,iBAAiB,CAACS,CAAD,CAArB;IAE3B,MAAMC,OAAO,GAAG,EAAhB;;IACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,CAAC,CAACK,MAAtB,EAA8BF,CAAC,GAAGC,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;IAEtC,QAAIF,CAAC,CAACK,QAAF,CAAWN,CAAC,CAACG,CAAD,CAAZ,CAAJ,EAAsBD,OAAO,CAACK,IAAR,CAAaP,CAAC,CAACG,CAAD,CAAd;IAEzB;;IAGD,MAAMK,eAAe,GAAGR,CAAC,CAACK,MAAF,GAAWH,OAAO,CAACG,MAAnB,GAA4BJ,CAAC,CAACI,MAA9B,GAAuCH,OAAO,CAACG,MAAvE;IACA,MAAMI,KAAK,GAAIP,OAAO,CAACG,MAAR,GAAiBK,IAAI,CAACC,GAAL,CAASX,CAAC,CAACK,MAAX,EAAmBJ,CAAC,CAACI,MAArB,CAAlB,GAAkDG,eAAe,GAAG,KAAlF;IAEA,SAAOC,KAAP;IAEH;;IAED,SAASG,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;IAE3B,MAAIC,OAAO,GAAG,IAAd;IACA,MAAIN,KAAK,GAAG,CAACO,QAAb;IAEA,MAAMC,cAAc,GAAG,gBAAgBC,IAAhB,CAAqBL,IAArB,CAAvB;IACA,MAAIM,aAAa,GAAG,IAApB;;IACA,MAAIF,cAAJ,EAAoB;IAChBE,IAAAA,aAAa,GAAG,IAAIC,MAAJ,kBAAsBH,cAAc,CAAC,CAAD,CAApC,cAAmD,GAAnD,CAAhB;IACH;;IAED,MAAMI,MAAM,GAAG7B,iBAAiB,CAACqB,IAAD,CAAhC;;IACA,OAAK,IAAIV,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGU,IAAI,CAACT,MAAzB,EAAiCF,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA6C;IAEzC,QAAMU,KAAI,GAAGC,IAAI,CAACX,CAAD,CAAjB;IACA,QAAIgB,aAAa,IAAI,CAACA,aAAa,CAACG,IAAd,CAAmBT,KAAnB,CAAtB,EAAgD;IAChD,QAAI,CAACM,aAAD,IAAkB,UAAUG,IAAV,CAAeT,KAAf,CAAtB,EAA4C;IAE5C,QAAMU,UAAU,GAAGxB,UAAU,CAACc,KAAD,EAAOQ,MAAP,CAA7B;;IACA,QAAIE,UAAU,GAAGd,KAAjB,EAAwB;IAEpBA,MAAAA,KAAK,GAAGc,UAAR;IACAR,MAAAA,OAAO,GAAG,CAACF,KAAD,CAAV;IAEH,KALD,MAKO,IAAIU,UAAU,KAAKd,KAAnB,EAA0B;IAE7BM,MAAAA,OAAO,CAACR,IAAR,CAAaM,KAAb;IAEH;IAEJ;;IAED,SAAO;IAAEE,IAAAA,OAAO,EAAPA,OAAF;IAAWN,IAAAA,KAAK,EAALA;IAAX,GAAP;IAEH;;;;;;;;;;;;"}