{"version":3,"file":"index.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["function strToCompareArray(str) {\r\n\r\n    return str.split(/\\W+/g).map(c => c.trim().toLowerCase()).filter(c => c.length > 1);\r\n\r\n}\r\n\r\nfunction compareStr(a, b) {\r\n\r\n    if (typeof a === 'string') a = strToCompareArray(a);\r\n    if (typeof b === 'string') b = strToCompareArray(b);\r\n\r\n    let tot = 0;\r\n    for (let i = 0, l = a.length; i < l; i++) {\r\n\r\n        if (b.includes(a[i])) tot++;\r\n\r\n    }\r\n\r\n    return tot / Math.min(a.length, b.length);\r\n\r\n}\r\n\r\nfunction findMatch(name, list) {\r\n\r\n    let matches = null;\r\n    let score = -Infinity;\r\n\r\n    const versionMatches = /\\w*\\d\\d\\d+\\w*/.exec(name);\r\n    let versionRegexp = null;\r\n    if (versionMatches) {\r\n        versionRegexp = new RegExp(`(^|\\\\W)${ versionMatches[0] }(\\\\W|$)`, 'i');\r\n    }\r\n\r\n    const gpuArr = strToCompareArray(name);\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n\r\n        const name = list[i];\r\n        if (versionRegexp && !versionRegexp.test(name)) continue;\r\n        if (!versionRegexp && /\\d\\d\\d+/.test(name)) continue;\r\n\r\n        const similarity = compareStr(name, gpuArr);\r\n        if (similarity > score) {\r\n\r\n            score = similarity;\r\n            matches = [name];\r\n\r\n        } else if (similarity === score) {\r\n\r\n            matches.push(name);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return { matches, score };\r\n\r\n}\r\n\r\nexport { findMatch };\r\n","import { findMatch } from './utils.js';\r\n\r\nfunction extractValue(reg, str) {\r\n    const matches = str.match(reg);\r\n    return matches && matches[0];\r\n}\r\n\r\nfunction getVendorRenderer(gl) {\r\n\r\n    const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n    if (!debugInfo) {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    const vendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\r\n    const renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\r\n\r\n    return { vendor, renderer };\r\n\r\n}\r\n\r\nfunction parseGpuInfo(vendor, renderer) {\r\n\r\n    // Full card description and webGL layer (if present)\r\n    const layer = extractValue(/(ANGLE)/g, renderer);\r\n    const name = extractValue(/(NVIDIA|AMD|Intel)\\D*\\d*\\S*/, renderer) || renderer;\r\n\r\n    return {\r\n\r\n        name: name.trim(),\r\n\r\n        unmasked: {\r\n            vendor,\r\n            renderer,\r\n        },\r\n\r\n        integrated: /Intel/i.test(name),\r\n        layer,\r\n\r\n    };\r\n\r\n}\r\n\r\nfunction getBasicInfo(glOrRenderer = null, vendor = null) {\r\n\r\n    glOrRenderer = glOrRenderer || document.createElement('canvas').getContext('webgl');\r\n\r\n    let renderer = null;\r\n    if (typeof glOrRenderer === 'string') {\r\n\r\n        renderer = glOrRenderer;\r\n\r\n    } else {\r\n\r\n        const vr = getVendorRenderer(glOrRenderer);\r\n        if (!vr) return null;\r\n\r\n        renderer = vr.renderer;\r\n        vendor = vr.vendor;\r\n\r\n    }\r\n\r\n    return parseGpuInfo(vendor, renderer);\r\n\r\n}\r\n\r\nfunction rendererToGpu(database, renderer) {\r\n\r\n    const gpuNames = Object.keys(database);\r\n    const { matches, score } = findMatch(renderer, gpuNames);\r\n\r\n    return score > 0.5 ? database[matches[0]] : null;\r\n\r\n}\r\n\r\nfunction getDetailedInfo(database, glOrRenderer = null) {\r\n\r\n    glOrRenderer = glOrRenderer || document.createElement('canvas').getContext('webgl');\r\n\r\n    let renderer = null;\r\n    if (typeof glOrRenderer === 'string') {\r\n\r\n        renderer = glOrRenderer;\r\n\r\n    } else {\r\n\r\n        const vr = getVendorRenderer(glOrRenderer);\r\n        if (!vr) return null;\r\n\r\n        renderer = vr.renderer;\r\n\r\n    }\r\n\r\n    return rendererToGpu(database, renderer);\r\n\r\n}\r\n\r\nexport { getDetailedInfo, getBasicInfo };\r\n"],"names":[],"mappings":"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"}